<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2009-2018 The Apromore Initiative.
  ~
  ~ This file is part of "Apromore".
  ~
  ~ "Apromore" is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ "Apromore" is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty
  ~ of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this program.
  ~ If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
  -->

<beans:beans xmlns="http://www.eclipse.org/gemini/blueprint/schema/blueprint"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xmlns:osgi-compendium="http://www.springframework.org/schema/osgi-compendium"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
            http://www.eclipse.org/gemini/blueprint/schema/blueprint http://www.eclipse.org/gemini/blueprint/schema/blueprint/gemini-blueprint.xsd
            http://www.springframework.org/schema/aop                http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
            http://www.springframework.org/schema/beans              http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
            http://www.springframework.org/schema/context            http://www.springframework.org/schema/context/spring-context-3.1.xsd
            http://www.springframework.org/schema/data/jpa           http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
            http://www.springframework.org/schema/osgi               http://www.springframework.org/schema/osgi/spring-osgi.xsd
            http://www.springframework.org/schema/osgi-compendium    http://www.springframework.org/schema/osgi-compendium/spring-osgi-compendium.xsd
            http://www.springframework.org/schema/tx                 http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
            http://www.springframework.org/schema/util               http://www.springframework.org/schema/util/spring-util-3.1.xsd">

    <context:annotation-config />
    <context:spring-configured />

    <aop:aspectj-autoproxy />

    <!-- Access the site.properties configuration artifact -->
    <osgi-compendium:cm-properties id="properties" persistent-id="site" init-timeout="60"/>
    <context:property-placeholder properties-ref="properties"/>

    <beans:bean id="kafkaHost" class="java.lang.String">
        <beans:qualifier value="kafkaHost"/>
        <beans:constructor-arg type="String" value="${kafka.host}"/>
    </beans:bean>

    <beans:bean id="eventsTopic" class="java.lang.String">
        <beans:qualifier value="eventsTopic"/>
        <beans:constructor-arg type="String" value="${kafka.events.topic}"/>
    </beans:bean>

    <beans:bean id="prefixesTopic" class="java.lang.String">
        <beans:qualifier value="prefixesTopic"/>
        <beans:constructor-arg type="String" value="${kafka.prefixes.topic}"/>
    </beans:bean>

    <beans:bean id="predictionsTopic" class="java.lang.String">
        <beans:qualifier value="predictionsTopic"/>
        <beans:constructor-arg type="String" value="${kafka.predictions.topic}"/>
    </beans:bean>

    <beans:bean id="controlTopic" class="java.lang.String">
        <beans:qualifier value="controlTopic"/>
        <beans:constructor-arg type="String" value="${kafka.control.topic}"/>
    </beans:bean>

    <!-- JPA -->
    <jpa:repositories base-package="org.apromore.service.predictivemonitor.impl" repository-impl-postfix="CustomImpl" />

    <beans:bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <beans:bean id="dataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close"
          p:driverClass="${jdbc.driver}" p:jdbcUrl="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}"
          p:maxConnectionsPerPartition="30" p:minConnectionsPerPartition="10" p:partitionCount="5" p:acquireIncrement="5"
          p:statementsCacheSize="100" p:releaseHelperThreads="3" />

    <beans:bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="persistenceUnitName" value="Nirdizati" />
        <beans:property name="jpaDialect">
            <beans:bean class="org.springframework.orm.jpa.vendor.EclipseLinkJpaDialect"/>
        </beans:property>
        <beans:property name="jpaVendorAdapter">
            <beans:bean id="vendorAdaptor" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
                  p:generateDdl="${jpa.generateDDL}" p:database="${jpa.database}" p:showSql="${jpa.showSql}"
                  p:databasePlatform="${jpa.databasePlatform}" />
        </beans:property>
        <beans:property name="jpaProperties">
            <util:properties id="jpaProperties">
                <beans:prop key="showSql">false</beans:prop>
                <beans:prop key="eclipselink.weaving">static</beans:prop>
                <beans:prop key="eclipselink.query-results-cache">true</beans:prop>
                <beans:prop key="eclipselink.query-results-cache.size">10000</beans:prop>
                <beans:prop key="eclipselink.jdbc.cache-statements">true</beans:prop>
                <beans:prop key="eclipselink.persistence-context.persist-on-commit">true</beans:prop>
                <beans:prop key="eclipselink.persistence-context.close-on-commit">true</beans:prop>
                <beans:prop key="eclipselink.persistence-context.flush-mode">AUTO</beans:prop>

                <beans:prop key="eclipselink.cache.shared.default">false</beans:prop>
                <beans:prop key="eclipselink.cache.type.default">SOFT</beans:prop>

                <beans:prop key="eclipselink.jdbc.batch-writing">JDBC</beans:prop>
                <beans:prop key="eclipselink.jdbc.batch-writing.size">1000</beans:prop>

                <beans:prop key="eclipselink.logging.level">OFF</beans:prop>
                <beans:prop key="eclipselink.logging.level.sql">OFF</beans:prop>
                <beans:prop key="eclipselink.logging.parameters">true</beans:prop>
            </util:properties>
        </beans:property>
    </beans:bean>

    <beans:bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <beans:property name="entityManagerFactory" ref="entityManagerFactory"/>
    </beans:bean>

    <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
        <beans:constructor-arg type="javax.sql.DataSource" ref="dataSource"/>
    </beans:bean>

    <tx:annotation-driven/>

    <!-- Dynamically instantiate a Spring bean for classes within the given package with the @Service annotation -->
    <context:component-scan base-package="org.apromore.service.predictivemonitor"/>
    <osgi:service ref="predictiveMonitorService" interface="org.apromore.service.predictivemonitor.PredictiveMonitorService" auto-export="interfaces"/>
</beans:beans>

