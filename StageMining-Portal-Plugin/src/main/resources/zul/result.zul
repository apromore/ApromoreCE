<window xmlns:n="http://www.zkoss.org/2005/zk/native" xmlns:w="http://www.zkoss.org/2005/zk/client" 
        xmlns:z="http://www.zkoss.org/2005/zul"
        position="center,center" closable="true" id="stageminingresult" sizable="false" maximizable="true" width="100%" height="100%" contentStyle="overflow:auto">

	<n:div id="myDiagramDiv" style="border: solid 1px black; height: 80%; width: 100%; position: absolute"></n:div>
    <button id="stageminingresult_layout" xmlns:w="client" w:onClick="layout();">Layout (Dagre)</button>
	<button id="stageminingresult_layout_cola" xmlns:w="client" w:onClick="layout_cola();">Layout (Cola)</button>
    <button id="stageminingresult_createLogButton">Create Staged Log...</button>
    
    <script type="text/javascript">
		var diagram;
		
		function init() {

			diagram = cytoscape({
			  container: document.getElementById('myDiagramDiv'), // container to render in
			  layout: {
				name: 'cose',
				padding: 10,
				randomize: true
			  },
			  zoom: 1,
			  pan: { x: 0, y: 0 },
			  minZoom: 1e-50,
			  maxZoom: 1e50,
			  zoomingEnabled: true,
			  userZoomingEnabled: true,
			  panningEnabled: true,
			  userPanningEnabled: true,
			  wheelSensitivity: 0.01,
			  
			  style: cytoscape.stylesheet()
				.selector('node')
				  .css({
					'shape': 'roundrectangle',
					'width': 'label',
					'height': 'label',
					'background-color': 'orange',
					'content': 'data(name)',
					'text-wrap': 'wrap',
					'text-valign': 'center',
					'text-max-width': '50px',
					'font-size': 7,
					'text-border-width': 10,
					'padding': 5
				  })
				.selector(':selected')
				  .css({
					'border-width': 3,
					'border-color': '#333'
				  })
				.selector('edge')
				  .css({
					'curve-style': 'bezier',
					'opacity': 1,
					'width': 'mapData(strength, 0, 100, 1, 10)',
					'target-arrow-shape': 'triangle',
					'source-arrow-shape': '',
					'color': 'black',
					'line-color': 'gray',
					'source-arrow-color': 'gray',
					'target-arrow-color': 'gray',
					'label': 'data(label)'
				  })
				.selector('edge.questionable')
				  .css({
					'line-style': 'dotted',
					'target-arrow-shape': 'diamond'
				  })
				.selector('.faded')
				  .css({
					'opacity': 0.25,
					'text-opacity': 0
				  }),
			  elements: {
					nodes: [],
					edges: []		  
			  },
			  
			  ready: function(){
				window.cy = this;
				
				// giddy up
			  }
			});
			
			// demo your ext
			diagram.edgeBendEditing({
										undoable: true,
									  });

		}	

		function load(json) {
			console.log("json");
            console.log(json);
			diagram.add($.parseJSON(json));
			//layout_cola();
			layout();
		}
		
		function layout() {
			diagram.elements().layout({"name": 'dagre', avoidOverlap:true, edgeSep: 5, nodeSep:100, rankSep: 100, rankDir:'LR', edgeWeight: function( edge ){ return 100; }}).run();
		}
		
		function layout_cola() {
			diagram.elements().layout({"name": 'cola', randomize:false, avoidOverlap:true, flow:{ axis: 'x', minSeparation: 150 }}).run();
		}		

        zk.afterMount(function() {
            init();
        });

    </script>
</window>