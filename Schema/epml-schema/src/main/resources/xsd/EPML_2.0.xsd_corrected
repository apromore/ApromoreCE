<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.epml.de" xmlns:epml="http://www.epml.de" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.epml.de" elementFormDefault="unqualified" attributeFormDefault="unqualified" version="2.0">
    <xs:complexType name="tExtensibleElements">
        <xs:sequence>
            <xs:element name="documentation" type="xs:anyType" minOccurs="0"/>
            <xs:element name="toolInfo" type="xs:anyType" minOccurs="0"/>
        </xs:sequence>
        <xs:anyAttribute namespace="##other" processContents="lax"/>
    </xs:complexType>
    <xs:complexType name="tEpcElement">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:choice minOccurs="0">
                        <xs:element name="graphics" type="epml:typeGraphics"/>
                    </xs:choice>
                    <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                </xs:sequence>
                <xs:attribute name="id" type="xs:positiveInteger" use="required"/>
                <xs:attribute name="defRef" type="xs:positiveInteger" use="optional"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:element name="epml" type="epml:typeEPML">
        <xs:unique name="typeId">
            <xs:selector xpath=".//*"/>
            <xs:field xpath="@typeId"/>
        </xs:unique>
        <xs:keyref name="typeRef" refer="typeId">
            <xs:selector xpath=".//*"/>
            <xs:field xpath="@typeRef"/>
        </xs:keyref>
        <xs:unique name="defId">
            <xs:selector xpath=".//*"/>
            <xs:field xpath="@defId"/>
        </xs:unique>
        <xs:keyref name="defRef" refer="defId">
            <xs:selector xpath=".//epc/*"/>
            <xs:field xpath="@defRef"/>
        </xs:keyref>
        <xs:keyref name="sourceSpecialization" refer="defId">
            <xs:selector xpath="./definitions/specialization/flow"/>
            <xs:field xpath="@source"/>
        </xs:keyref>
        <xs:keyref name="targetSpecialization" refer="defId">
            <xs:selector xpath="./definitions/specialization/flow"/>
            <xs:field xpath="@target"/>
        </xs:keyref>
        <xs:keyref name="roleSpecialization" refer="defId">
            <xs:selector xpath=".//epc/role/configurableRole/configuration"/>
            <xs:field xpath="@specialization"/>
        </xs:keyref>
        <xs:keyref name="objectSpecialization" refer="defId">
            <xs:selector xpath=".//epc/object/configurableObject/configuration"/>
            <xs:field xpath="@specialization"/>
        </xs:keyref>
        <xs:unique name="specId">
            <xs:selector xpath="./definitions/specialization"/>
            <xs:field xpath="@specId"/>
        </xs:unique>
    </xs:element>
    <xs:complexType name="typeEPML">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:element name="graphicsDefault" type="epml:typeGraphicsDefault" minOccurs="0"/>
                    <xs:element name="coordinates" type="epml:typeCoordinates"/>
                    <xs:element name="definitions" type="epml:typeDefinitions" minOccurs="0"/>
                    <xs:element name="attributeTypes" type="epml:typeAttrTypes" minOccurs="0" maxOccurs="unbounded"/>
                    <xs:element name="directory" type="epml:typeDirectory" maxOccurs="unbounded">
                        <xs:unique name="epcId">
                            <xs:selector xpath=".//*"/>
                            <xs:field xpath="@epcId"/>
                        </xs:unique>
                        <xs:keyref name="linkToEpcId" refer="epcId">
                            <xs:selector xpath=".//toProcess"/>
                            <xs:field xpath="@linkToEpcId"/>
                        </xs:keyref>
                    </xs:element>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeGraphicsDefault">
        <xs:sequence>
            <xs:element name="fill" type="epml:typeFill" minOccurs="0"/>
            <xs:element name="line" type="epml:typeLine" minOccurs="0"/>
            <xs:element name="font" type="epml:typeFont" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeCoordinates">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:attribute name="xOrigin" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="leftToRight"/>
                            <xs:enumeration value="rightToLeft"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="yOrigin" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="topToBottom"/>
                            <xs:enumeration value="bottomToTop"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeDefinitions">
        <xs:sequence>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="definition" type="epml:typeDefinition"/>
                <xs:element name="specialization" type="epml:typeSpecialization"/>
            </xs:choice>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeDefinition">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="defId" type="xs:positiveInteger" use="required"/>
                <xs:attribute name="type">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="event"/>
                            <xs:enumeration value="function"/>
                            <xs:enumeration value="role"/>
                            <xs:enumeration value="object"/>
                            <xs:enumeration value="connector"/>
                            <xs:enumeration value="any"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeSpecialization">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:element name="flow" type="epml:typeFlow" minOccurs="0"/>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="specId" type="xs:positiveInteger" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeAttrTypes">
        <xs:sequence>
            <xs:sequence minOccurs="0" maxOccurs="unbounded">
                <xs:element name="attributeType" type="epml:typeAttrType"/>
            </xs:sequence>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeAttrType">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                </xs:sequence>
                <xs:attribute name="typeId" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeDirectory">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="epc" type="epml:typeEPC">
                            <xs:unique name="id">
                                <xs:selector xpath="./*"/>
                                <xs:field xpath="@id"/>
                            </xs:unique>
                            <xs:keyref name="source" refer="id">
                                <xs:selector xpath="./arc/*"/>
                                <xs:field xpath="@source"/>
                            </xs:keyref>
                            <xs:keyref name="target" refer="id">
                                <xs:selector xpath="./arc/*"/>
                                <xs:field xpath="@target"/>
                            </xs:keyref>                    
                            <xs:keyref name="goto" refer="id">
                                <xs:selector xpath=".//configurableConnector/configuration"/>
                                <xs:field xpath="@goto"/>
                            </xs:keyref>
                        </xs:element>
                        <xs:element name="directory" type="epml:typeDirectory"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="name" type="xs:string"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeEPC">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="configurationRequirement" type="epml:typeCReq"/>
                        <xs:element name="configurationGuideline" type="epml:typeCReq"/>
                        <xs:element name="configurationOrder" type="epml:typeCOrder"/>
                    </xs:choice>
                    <xs:sequence minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="event" type="epml:typeEvent" minOccurs="0"/>
                        <xs:element name="function" type="epml:typeFunction" minOccurs="0"/>
                        <xs:element name="role" type="epml:typeRole" minOccurs="0"/>
                        <xs:element name="object" type="epml:typeObject" minOccurs="0"/>
                        <xs:element name="processInterface" type="epml:typeProcessInterface" minOccurs="0"/>
                        <xs:element name="and" type="epml:typeAND" minOccurs="0"/>
                        <xs:element name="or" type="epml:typeOR" minOccurs="0"/>
                        <xs:element name="xor" type="epml:typeXOR" minOccurs="0"/>
                        <xs:element name="range" type="epml:typeRANGE" minOccurs="0"/>
                        <xs:element name="arc" type="epml:typeArc" minOccurs="0"/>
                        <!-- Apromore edit: removed this because un-namespaced epc elements ALWAYS clash, so entire schema is invalid
                        <xs:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
                        -->
                    </xs:sequence>
                </xs:sequence>
                <xs:attribute name="epcId" type="xs:positiveInteger" use="required"/>
                <xs:attribute name="name" type="xs:string" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCReq">
        <xs:sequence>
            <xs:element name="expression" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="idRefs">
            <xs:simpleType>
                <xs:list itemType="xs:positiveInteger"/>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="typeCOrder">
        <xs:sequence>
            <xs:element name="flow" type="epml:typeFlow"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeEvent">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeFunction">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="toProcess" type="epml:typeToProcess" minOccurs="0"/>
                    </xs:choice>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableFunction" type="epml:typeCFunction" minOccurs="0"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute" minOccurs="0"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCFunction">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="value">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="on"/>
                                <xs:enumeration value="off"/>
                                <xs:enumeration value="opt"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeRole">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableRole" type="epml:typeCRole"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="optional" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCRole">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="optionality">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="mnd"/>
                                <xs:enumeration value="off"/>
                                <xs:enumeration value="opt"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="specialization" type="xs:positiveInteger"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeObject">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableObject" type="epml:typeCObject"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="type" use="required">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="input"/>
                            <xs:enumeration value="output"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="optional" type="xs:boolean" use="optional" default="false"/>
                <xs:attribute name="consumed" type="xs:boolean" use="optional" default="false"/>
                <xs:attribute name="initial" type="xs:boolean" use="optional" default="false"/>
                <xs:attribute name="final" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCObject">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="optionality">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="mnd"/>
                                <xs:enumeration value="off"/>
                                <xs:enumeration value="opt"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="specialization" type="xs:positiveInteger"/>
                    <xs:attribute name="usage">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="use"/>
                                <xs:enumeration value="cns"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeAttribute">
        <xs:attribute name="typeRef" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="typeToProcess">
        <xs:attribute name="linkToEpcId" type="xs:positiveInteger" use="required"/>
    </xs:complexType>
    <xs:complexType name="typeProcessInterface">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:element name="toProcess" type="epml:typeToProcess"/>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeAND">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableConnector" type="epml:typeCAnd"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCAnd">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="value" type="xs:string" fixed="and"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeOR">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableConnector" type="epml:typeCOR"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCOR">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="value">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="or"/>
                                <xs:enumeration value="and"/>
                                <xs:enumeration value="xor"/>
                                <xs:enumeration value="seq"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="goto" type="xs:positiveInteger" use="optional"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeXOR">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableConnector" type="epml:typeCXOR"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCXOR">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="value">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="xor"/>
                                <xs:enumeration value="seq"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="goto" type="xs:positiveInteger" use="optional"/>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeRANGE">
        <xs:complexContent>
            <xs:extension base="epml:tEpcElement">
                <xs:sequence>
                    <xs:choice minOccurs="0">
                        <xs:element name="configurableConnector" type="epml:typeCRange"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="lowerBound" use="required">
                  <xs:simpleType>
                    <xs:union memberTypes="xs:positiveInteger">
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="k"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:union>
                  </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="upperBound" use="required">
                  <xs:simpleType>
                    <xs:union memberTypes="xs:positiveInteger">
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="k"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:union>
                  </xs:simpleType>
                </xs:attribute>             
                <xs:attribute name="type" use="optional">
                    <xs:simpleType>
                        <xs:restriction base="xs:string">
                            <xs:enumeration value="role"/>
                            <xs:enumeration value="input"/>
                            <xs:enumeration value="output"/>
                        </xs:restriction>
                    </xs:simpleType>
                </xs:attribute>
                <xs:attribute name="optional" type="xs:boolean" use="optional" default="false"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeCRange">
        <xs:choice minOccurs="0">
            <xs:element name="configuration">
                <xs:complexType>
                    <xs:attribute name="optionality">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="mnd"/>
                                <xs:enumeration value="off"/>
                                <xs:enumeration value="opt"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="range">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="node"/>
                                <xs:enumeration value="reducedRange"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="goto" type="xs:positiveInteger" use="optional"/>
                    <xs:attribute name="increment" use="optional">
                        <xs:simpleType>
                            <xs:union memberTypes="xs:nonNegativeInteger">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="k"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:union>
                        </xs:simpleType>
                    </xs:attribute> 
                    <xs:attribute name="decrement" use="optional">
                        <xs:simpleType>
                            <xs:union memberTypes="xs:nonNegativeInteger">
                                <xs:simpleType>
                                    <xs:restriction base="xs:string">
                                        <xs:enumeration value="k"/>
                                    </xs:restriction>
                                </xs:simpleType>
                            </xs:union>
                        </xs:simpleType>
                    </xs:attribute> 
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <xs:complexType name="typeArc">
        <xs:complexContent>
            <xs:extension base="epml:tExtensibleElements">
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0"/>
                    <xs:element name="description" type="xs:string" minOccurs="0"/>
                    <xs:choice>
                        <xs:element name="flow" type="typeFlow" minOccurs="0"/>
                        <xs:element name="relation" type="typeRelation" minOccurs="0"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="graphics" type="epml:typeMove"/>
                    </xs:choice>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="attribute" type="epml:typeAttribute"/>
                    </xs:choice>
                </xs:sequence>
                <xs:attribute name="id" type="xs:positiveInteger" use="required"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>
    <xs:complexType name="typeFlow">
        <xs:attribute name="source" type="xs:positiveInteger" use="required"/>
        <xs:attribute name="target" type="xs:positiveInteger" use="required"/>
    </xs:complexType>   
    <xs:complexType name="typeRelation">
        <xs:attribute name="source" type="xs:positiveInteger" use="required"/>
        <xs:attribute name="target" type="xs:positiveInteger" use="required"/>
        <xs:attribute name="type" use="optional">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="role"/>
                    <xs:enumeration value="input"/>
                    <xs:enumeration value="output"/>
                    <xs:enumeration value="any"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="typeGraphics">
        <xs:sequence>
            <xs:element name="position" type="epml:typePosition" minOccurs="0"/>
            <xs:element name="fill" type="epml:typeFill" minOccurs="0"/>
            <xs:element name="line" type="epml:typeLine" minOccurs="0"/>
            <xs:element name="font" type="epml:typeFont" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typePosition">
        <xs:attribute name="x" type="xs:decimal"/>
        <xs:attribute name="y" type="xs:decimal"/>
        <xs:attribute name="width" type="xs:decimal"/>
        <xs:attribute name="height" type="xs:decimal"/>
    </xs:complexType>
    <xs:complexType name="typeFill">
        <xs:attribute name="color" type="xs:string"/>
        <xs:attribute name="image" type="xs:anyURI"/>
        <xs:attribute name="gradient-color" type="xs:string"/>
        <xs:attribute name="gradient-rotation">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="vertical"/>
                    <xs:enumeration value="horizontal"/>
                    <xs:enumeration value="diagonal"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="typeLine">
        <xs:attribute name="shape">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="line"/>
                    <xs:enumeration value="curve"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="color" type="xs:string"/>
        <xs:attribute name="width" type="xs:decimal"/>
        <xs:attribute name="style">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="solid"/>
                    <xs:enumeration value="dash"/>
                    <xs:enumeration value="dot"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>
    <xs:complexType name="typeFont">
        <xs:attribute name="family" type="xs:string"/>
        <xs:attribute name="style" type="xs:string"/>
        <xs:attribute name="weight" type="xs:string"/>
        <xs:attribute name="size" type="xs:positiveInteger"/>
        <xs:attribute name="decoration">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="underline"/>
                    <xs:enumeration value="overline"/>
                    <xs:enumeration value="line-through"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="color" type="xs:string"/>
        <xs:attribute name="verticalAlign">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="top"/>
                    <xs:enumeration value="middle"/>
                    <xs:enumeration value="bottom"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="horizontalAlign">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:enumeration value="left"/>
                    <xs:enumeration value="middle"/>
                    <xs:enumeration value="right"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="rotation" type="xs:decimal"/>
    </xs:complexType>
    <xs:complexType name="typeMove">
        <xs:sequence>
            <xs:element name="position" type="epml:typeMove2" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="line" type="epml:typeLine" minOccurs="0"/>
            <xs:element name="font" type="epml:typeFont" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="typeMove2">
        <xs:attribute name="x" type="xs:decimal" use="required"/>
        <xs:attribute name="y" type="xs:decimal" use="required"/>
    </xs:complexType>
</xs:schema>
