<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright Â© 2009-2018 The Apromore Initiative.
  ~
  ~ This file is part of "Apromore".
  ~
  ~ "Apromore" is free software; you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation; either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ "Apromore" is distributed in the hope that it will be useful, but
  ~ WITHOUT ANY WARRANTY; without even the implied warranty
  ~ of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public
  ~ License along with this program.
  ~ If not, see <http://www.gnu.org/licenses/lgpl-3.0.html>.
  -->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:tns="urn:qut-edu-au:schema:apromore:manager"
           xmlns:xmime="http://www.w3.org/2005/05/xmlmime" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           targetNamespace="urn:qut-edu-au:schema:apromore:manager"
           elementFormDefault="qualified" attributeFormDefault="unqualified" version="5.0"
           xsi:schemaLocation="http://www.w3.org/2005/05/xmlmime" >

    <!-- Manager -->
    <xs:element name="IsGEDReadyRequest" type="tns:IsGEDReadyInputMsgType"/>
    <xs:element name="ISGEDReadyResponse" type="tns:IsGEDReadyOutputMsgType"/>
    <xs:element name="ReadDomainsRequest" type="tns:ReadDomainsInputMsgType"/>
    <xs:element name="ReadDomainsResponse" type="tns:ReadDomainsOutputMsgType"/>
    <xs:element name="ReadNativeTypesRequest" type="tns:ReadNativeTypesInputMsgType"/>
    <xs:element name="ReadNativeTypesResponse" type="tns:ReadNativeTypesOutputMsgType"/>
    <xs:element name="ReadUserByUsernameRequest" type="tns:ReadUserByUsernameInputMsgType"/>
    <xs:element name="ReadUserByUsernameResponse" type="tns:ReadUserByUsernameOutputMsgType"/>
    <xs:element name="ReadUserByEmailRequest" type="tns:ReadUserByEmailInputMsgType"/>
    <xs:element name="ReadUserByEmailResponse" type="tns:ReadUserByEmailOutputMsgType"/>
    <xs:element name="ReadAllUsersRequest" type="tns:ReadAllUsersInputMsgType"/>
    <xs:element name="ReadAllUsersResponse" type="tns:ReadAllUsersOutputMsgType"/>
    <xs:element name="WriteUserRequest" type="tns:WriteUserInputMsgType"/>
    <xs:element name="WriteUserResponse" type="tns:WriteUserOutputMsgType"/>
    <xs:element name="ResetUserPasswordRequest" type="tns:ResetUserPasswordInputMsgType"/>
    <xs:element name="ResetUserPasswordResponse" type="tns:ResetUserPasswordOutputMsgType"/>
    <xs:element name="UpdateSearchHistoryRequest" type="tns:UpdateSearchHistoryInputMsgType"/>
    <xs:element name="UpdateSearchHistoryResponse" type="tns:UpdateSearchHistoryOutputMsgType"/>
    <xs:element name="EditLogDataRequest" type="tns:EditLogDataInputMsgType"/>
    <xs:element name="EditLogDataResponse" type="tns:EditLogDataOutputMsgType"/>
    <xs:element name="EditProcessDataRequest" type="tns:EditProcessDataInputMsgType"/>
    <xs:element name="EditProcessDataResponse" type="tns:EditProcessDataOutputMsgType"/>
    <xs:element name="DeleteProcessVersionsRequest" type="tns:DeleteProcessVersionsInputMsgType"/>
    <xs:element name="DeleteProcessVersionsResponse" type="tns:DeleteProcessVersionsOutputMsgType"/>
    <xs:element name="DeleteLogRequest" type="tns:DeleteLogInputMsgType"/>
    <xs:element name="DeleteLogResponse" type="tns:DeleteLogOutputMsgType"/>
    <xs:element name="ImportLogRequest" type="tns:ImportLogInputMsgType"/>
    <xs:element name="ImportLogResponse" type="tns:ImportLogOutputMsgType"/>
    <xs:element name="ImportProcessRequest" type="tns:ImportProcessInputMsgType"/>
    <xs:element name="ImportProcessResponse" type="tns:ImportProcessOutputMsgType"/>
    <xs:element name="ExportFormatRequest" type="tns:ExportFormatInputMsgType"/>
    <xs:element name="ExportFormatResponse" type="tns:ExportFormatOutputMsgType"/>
    <xs:element name="ExportLogRequest" type="tns:ExportLogInputMsgType"/>
    <xs:element name="ExportLogResponse" type="tns:ExportLogOutputMsgType"/>
    <xs:element name="UpdateProcessRequest" type="tns:UpdateProcessInputMsgType"/>
    <xs:element name="UpdateProcessResponse" type="tns:UpdateProcessOutputMsgType"/>
    <xs:element name="GetFragmentRequest" type="tns:GetFragmentInputMsgType"/>
    <xs:element name="GetFragmentResponse" type="tns:GetFragmentOutputMsgType"/>
    <xs:element name="GetWorkspaceFolderTreeRequest" type="tns:GetWorkspaceFolderTreeInputMsgType"/>
    <xs:element name="GetWorkspaceFolderTreeResponse" type="tns:GetWorkspaceFolderTreeOutputMsgType"/>
    <xs:element name="GetSubFoldersRequest" type="tns:GetSubFoldersInputMsgType"/>
    <xs:element name="GetSubFoldersResponse" type="tns:GetSubFoldersOutputMsgType"/>
    <xs:element name="GetBreadcrumbsRequest" type="tns:GetBreadcrumbsInputMsgType"/>
    <xs:element name="GetBreadcrumbsResponse" type="tns:GetBreadcrumbsOutputMsgType"/>
    <xs:element name="GetFolderGroupsRequest" type="tns:GetFolderGroupsInputMsgType"/>
    <xs:element name="GetFolderGroupsResponse" type="tns:GetFolderGroupsOutputMsgType"/>
    <xs:element name="GetProcessGroupsRequest" type="tns:GetProcessGroupsInputMsgType"/>
    <xs:element name="GetProcessGroupsResponse" type="tns:GetProcessGroupsOutputMsgType"/>
    <xs:element name="GetLogGroupsRequest" type="tns:GetLogGroupsInputMsgType"/>
    <xs:element name="GetLogGroupsResponse" type="tns:GetLogGroupsOutputMsgType"/>
    <xs:element name="CreateUserRequest" type="tns:CreateUserInputMsgType"/>
    <xs:element name="CreateUserResponse" type="tns:CreateUserOutputMsgType"/>
    <xs:element name="GetProcessesRequest" type="tns:GetProcessesInputMsgType"/>
    <xs:element name="GetProcessesResponse" type="tns:GetProcessesOutputMsgType"/>
    <xs:element name="GetLogsRequest" type="tns:GetLogsInputMsgType"/>
    <xs:element name="GetLogsResponse" type="tns:GetLogsOutputMsgType"/>
    <xs:element name="CreateFolderRequest" type="tns:CreateFolderInputMsgType"/>
    <xs:element name="CreateFolderResponse" type="tns:CreateFolderOutputMsgType"/>
    <xs:element name="UpdateFolderRequest" type="tns:UpdateFolderInputMsgType"/>
    <xs:element name="UpdateFolderResponse" type="tns:UpdateFolderOutputMsgType"/>
    <xs:element name="DeleteFolderRequest" type="tns:DeleteFolderInputMsgType"/>
    <xs:element name="DeleteFolderResponse" type="tns:DeleteFolderOutputMsgType"/>
    <xs:element name="SearchGroupsRequest" type="tns:SearchGroupsInputMsgType"/>
    <xs:element name="SearchGroupsResponse" type="tns:SearchGroupsOutputMsgType"/>
    <xs:element name="SearchUserRequest" type="tns:SearchUserInputMsgType"/>
    <xs:element name="SearchUserResponse" type="tns:SearchUserOutputMsgType"/>
    <xs:element name="SaveFolderPermissionsRequest" type="tns:SaveFolderPermissionsInputMsgType"/>
    <xs:element name="SaveFolderPermissionsResponse" type="tns:SaveFolderPermissionsOutputMsgType"/>
    <xs:element name="SaveProcessPermissionsRequest" type="tns:SaveProcessPermissionsInputMsgType"/>
    <xs:element name="SaveProcessPermissionsResponse" type="tns:SaveProcessPermissionsOutputMsgType"/>
    <xs:element name="SaveLogPermissionsRequest" type="tns:SaveLogPermissionsInputMsgType"/>
    <xs:element name="SaveLogPermissionsResponse" type="tns:SaveLogPermissionsOutputMsgType"/>
    <xs:element name="RemoveFolderPermissionsRequest" type="tns:RemoveFolderPermissionsInputMsgType"/>
    <xs:element name="RemoveFolderPermissionsResponse" type="tns:RemoveFolderPermissionsOutputMsgType"/>
    <xs:element name="RemoveProcessPermissionsRequest" type="tns:RemoveProcessPermissionsInputMsgType"/>
    <xs:element name="RemoveProcessPermissionsResponse" type="tns:RemoveProcessPermissionsOutputMsgType"/>
    <xs:element name="RemoveLogPermissionsRequest" type="tns:RemoveLogPermissionsInputMsgType"/>
    <xs:element name="RemoveLogPermissionsResponse" type="tns:RemoveLogPermissionsOutputMsgType"/>
    <xs:element name="AddProcessToFolderRequest" type="tns:AddProcessToFolderInputMsgType"/>
    <xs:element name="AddProcessToFolderResponse" type="tns:AddProcessToFolderOutputMsgType"/>


    <!-- ComputeMeasurements -->
    <xs:element name="ComputeMeasurementsRequest" type="tns:ComputeMeasurementsInputMsgType"/>
    <xs:element name="ComputeMeasurementsResponse" type="tns:ComputeMeasurementsOutputMsgType"/>

    <xs:complexType name="ComputeMeasurementsInputMsgType">
        <xs:sequence>
            <xs:element name="Process" type="xs:string" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ComputeMeasurementsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!-- DiagramStructuring from Editor -->
    <xs:element name="StructureBPMNModelRequest" type="tns:StructureBPMNModelInputMsgType"/>
    <xs:element name="StructureBPMNModelResponse" type="tns:StructureBPMNModelOutputMsgType"/>

    <xs:complexType name="StructureBPMNModelInputMsgType">
        <xs:sequence>
            <xs:element name="Process" type="xs:string" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StructureBPMNModelOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!-- DiagramStructuring from Manager -->
    <xs:element name="StructureBPMNProcessRequest" type="tns:StructureBPMNProcessInputMsgType"/>
    <xs:element name="StructureBPMNProcessResponse" type="tns:StructureBPMNProcessOutputMsgType"/>

    <xs:complexType name="StructureBPMNProcessInputMsgType">
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="ProcessName" type="xs:string"/>
        <xs:attribute name="BranchName" type="xs:string"/>
        <xs:attribute name="VersionNumber" type="xs:string"/>
        <xs:attribute name="Username" type="xs:string"/>
        <xs:attribute name="FolderId" type="xs:int"/>
        <xs:attribute name="Domain" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="StructureBPMNProcessOutputMsgType">
        <xs:sequence>
            <xs:element name="ProcessSummary" type="tns:ProcessSummaryType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!-- APQL -->
    <xs:element name="TabAPQLRequest" type="tns:TabAPQLInputMsgType"/>
    <xs:element name="TabAPQLResponse" type="tns:TabAPQLOutputMsgType"/>

    <xs:complexType name="TabAPQLInputMsgType">
        <xs:sequence>
            <xs:element name="results" type="tns:ResultPQL" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="details" type="tns:Detail" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="userID" type="xs:string"/>
        <xs:attribute name="query" type="xs:string"/>
        <xs:attribute name="nameQuery" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="TabAPQLOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="userID" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ResultPQL">
        <xs:sequence>
            <xs:element name="attributesToShow" type="xs:boolean" minOccurs="0" maxOccurs="8"/>
            <xs:element name="pst" type="tns:ProcessSummaryType"/>
            <xs:element name="vst" type="tns:VersionSummaryType"/>
        </xs:sequence>

    </xs:complexType>

    <xs:complexType name="Detail">
        <xs:sequence>
            <xs:element name="detail" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="labelOne" type="xs:string"/>
        <xs:attribute name="similarityLabelOne" type="xs:string"/>
    </xs:complexType>

    <!-- BPMNMiner -->
    <xs:element name="DiscoverBPMNModelRequest" type="tns:DiscoverBPMNModelInputMsgType"/>
    <xs:element name="DiscoverBPMNModelResponse" type="tns:DiscoverBPMNModelOutputMsgType"/>

    <xs:complexType name="DiscoverBPMNModelInputMsgType">
        <xs:sequence>
            <xs:element name="XESGZLog" type="xs:base64Binary"/>
            <xs:element name="miningAlgorithm" type="xs:int"/>
            <xs:element name="dependencyAlgorithm" type="xs:int"/>
            <xs:element name="sortLog" type="xs:boolean"/>
            <xs:element name="structProcess" type="xs:boolean"/>
            <xs:element name="interruptingEventTolerance" type="xs:double"/>
            <xs:element name="multiInstancePercentage" type="xs:double"/>
            <xs:element name="multiInstanceTolerance" type="xs:double"/>
            <xs:element name="timerEventPercentage" type="xs:double"/>
            <xs:element name="timerEventTolerance" type="xs:double"/>
            <xs:element name="noiseThreshold" type="xs:double"/>
            <xs:element name="canditateEntities" type="tns:BPMNMinerList" minOccurs="0"/>
            <xs:element name="primaryKeySelections" type="tns:BPMNMinerMap" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DiscoverBPMNModelOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="BPMNMinerMap">
        <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="entries" type="tns:BPMNMinerEntry"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="BPMNMinerEntry">
        <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="key" type="tns:BPMNMinerSet"/>
            <xs:element name="value" type="tns:BPMNMinerSet"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="BPMNMinerSet">
        <xs:sequence maxOccurs="unbounded">
            <xs:element name="elements" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="BPMNMinerList">
        <xs:sequence>
            <xs:element name="elements" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="Selection">
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="selected" type="xs:boolean"/>
    </xs:complexType>

    <!-- Clustering -->
    <xs:element name="CreateGEDMatrixRequest" type="tns:CreateGEDMatrixInputMsgType"/>
    <xs:element name="CreateGEDMatrixResponse" type="tns:CreateGEDMatrixOutputMsgType"/>
    <xs:element name="CreateClustersRequest" type="tns:CreateClustersInputMsgType"/>
    <xs:element name="CreateClustersResponse" type="tns:CreateClustersOutputMsgType"/>
    <xs:element name="GetClustersRequest" type="tns:GetClustersRequestType"/>
    <xs:element name="GetClustersResponse" type="tns:GetClustersResponseType"/>
    <xs:element name="GetClusteringSummaryRequest" type="tns:GetClusteringSummaryInputMsgType"/>
    <xs:element name="GetClusteringSummaryResponse" type="tns:GetClusteringSummaryOutputMsgType"/>
    <xs:element name="GetClusterSummariesRequest" type="tns:GetClusterSummariesInputMsgType"/>
    <xs:element name="GetClusterSummariesResponse" type="tns:GetClusterSummariesOutputMsgType"/>
    <xs:element name="GetGedMatrixSummaryRequest" type="tns:GetGedMatrixSummaryInputMsgType"/>
    <xs:element name="GetGedMatrixSummaryResponse" type="tns:GetGedMatrixSummaryOutputMsgType"/>
    <xs:element name="GetClusterRequest" type="tns:GetClusterInputMsgType"/>
    <xs:element name="GetClusterResponse" type="tns:GetClusterOutputMsgType"/>
    <xs:element name="PairwiseDistancesRequest" type="tns:GetPairwiseDistancesInputMsgType" />
    <xs:element name="PairwiseDistancesResponse" type="tns:GetPairwiseDistancesOutputMsgType"/>


    <!-- Retrieve Process Summaries -->
    <xs:element name="ReadProcessSummariesRequest" type="tns:ReadProcessSummariesInputMsgType"/>
    <xs:element name="ReadProcessSummariesResponse" type="tns:ReadProcessSummariesOutputMsgType"/>
    <xs:element name="WriteAnnotationRequest" type="tns:WriteAnnotationInputMsgType"/>
    <xs:element name="WriteAnnotationResponse" type="tns:WriteAnnotationOutputMsgType"/>

    <!-- ToolBox -->
    <xs:element name="SearchForSimilarProcessesRequest" type="tns:SearchForSimilarProcessesInputMsgType"/>
    <xs:element name="SearchForSimilarProcessesResponse" type="tns:SearchForSimilarProcessesOutputMsgType"/>
    <xs:element name="MergeProcessesRequest" type="tns:MergeProcessesInputMsgType"/>
    <xs:element name="MergeProcessesResponse" type="tns:MergeProcessesOutputMsgType"/>

    <!-- Plugins -->
    <xs:element name="ReadInstalledPluginsRequest" type="tns:ReadInstalledPluginsInputMsgType"/>
    <xs:element name="ReadInstalledPluginsResponse" type="tns:ReadInstalledPluginsOutputMsgType"/>
    <xs:element name="ReadPluginInfoRequest" type="tns:ReadPluginInfoInputMsgType"/>
    <xs:element name="ReadPluginInfoResponse" type="tns:ReadPluginInfoOutputMsgType"/>

    <!-- Canoniser -->
    <xs:element name="ReadCanoniserInfoRequest" type="tns:ReadCanoniserInfoInputMsgType"/>
    <xs:element name="ReadCanoniserInfoResponse" type="tns:ReadCanoniserInfoOutputMsgType"/>
    <xs:element name="ReadInitialNativeFormatRequest" type="tns:ReadInitialNativeFormatInputMsgType"/>
    <xs:element name="ReadInitialNativeFormatResponse" type="tns:ReadInitialNativeFormatOutputMsgType"/>
    <xs:element name="ReadNativeMetaDataRequest" type="tns:ReadNativeMetaDataInputMsgType"/>
    <xs:element name="ReadNativeMetaDataResponse" type="tns:ReadNativeMetaDataOutputMsgType"/>

    <!-- Deployment Plugin -->
    <xs:element name="ReadDeploymentPluginInfoRequest" type="tns:ReadDeploymentPluginInfoInputMsgType"/>
    <xs:element name="ReadDeploymentPluginInfoResponse" type="tns:ReadDeploymentPluginInfoOutputMsgType"/>
    <xs:element name="DeployProcessRequest" type="tns:DeployProcessInputMsgType"/>
    <xs:element name="DeployProcessResponse" type="tns:DeployProcessOutputMsgType"/>


    <!-- Plugin Messages -->
    <xs:complexType name="ReadPluginInfoInputMsgType">
        <xs:attribute name="pluginName" type="xs:string"/>
        <xs:attribute name="pluginVersion" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ReadPluginInfoOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="PluginInfoResult" type="tns:PluginInfoResult"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadInstalledPluginsInputMsgType">
        <xs:attribute name="typeFilter" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="ReadInstalledPluginsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="PluginInfo" type="tns:PluginInfo" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Plugin Data Types -->
    <xs:complexType name="PluginInfoResult">
        <xs:sequence>
            <xs:element name="MandatoryParameters" type="tns:PluginParameters" minOccurs="0" maxOccurs="1"/>
            <xs:element name="OptionalParameters" type="tns:PluginParameters" minOccurs="0" maxOccurs="1"/>
            <xs:element name="PluginInfo" type="tns:PluginInfo" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PluginInfo">
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="version" type="xs:string"/>
        <xs:attribute name="description" type="xs:string"/>
        <xs:attribute name="type" type="xs:string"/>
        <xs:attribute name="author" type="xs:string"/>
        <xs:attribute name="email" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="PluginParameters">
        <xs:sequence>
            <xs:element name="Parameter" type="tns:PluginParameter" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PluginParameter">
        <xs:sequence>
            <xs:element name="value" type="xs:anySimpleType"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="description" type="xs:string" use="optional"/>
        <xs:attribute name="class" type="xs:string"/>
        <xs:attribute name="isMandatory" type="xs:boolean"/>
        <xs:attribute name="category" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="PluginMessages">
        <xs:sequence>
            <xs:element name="Message" type="tns:PluginMessage" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>
    <xs:complexType name="PluginMessage">
        <xs:sequence>
            <xs:element name="value" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Canoniser Message Types -->
    <xs:complexType name="ReadCanoniserInfoInputMsgType">
        <xs:attribute name="nativeType" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ReadCanoniserInfoOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="PluginInfo" type="tns:PluginInfo" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadInitialNativeFormatInputMsgType">
        <xs:sequence>
            <xs:element name="NativeMetaData" type="tns:NativeMetaData"/>
        </xs:sequence>
        <xs:attribute name="nativeType" type="xs:string"/>
        <xs:attribute name="canoniserName" type="xs:string" use="optional"/>
        <xs:attribute name="canoniserVersion" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="ReadInitialNativeFormatOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="NativeFormat" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadNativeMetaDataInputMsgType">
        <xs:sequence>
            <xs:element name="NativeFormat" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
        <xs:attribute name="nativeType" type="xs:string"/>
        <xs:attribute name="canoniserName" type="xs:string" use="optional"/>
        <xs:attribute name="canoniserVersion" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="ReadNativeMetaDataOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="NativeMetaData" type="tns:NativeMetaData"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Canoniser Data Type -->
    <xs:complexType name="NativeMetaData">
        <xs:attribute name="processName" type="xs:string" use="optional"/>
        <xs:attribute name="processAuthor" type="xs:string" use="optional"/>
        <xs:attribute name="processVersion" type="xs:string" use="optional"/>
        <xs:attribute name="processDocumentation" type="xs:string" use="optional"/>
        <xs:attribute name="processCreated" type="xs:dateTime" use="optional"/>
        <xs:attribute name="processLastUpdate" type="xs:dateTime" use="optional"/>
    </xs:complexType>

    <!-- Deployment Messages -->
    <xs:complexType name="ReadDeploymentPluginInfoInputMsgType">
        <xs:attribute name="nativeType" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="ReadDeploymentPluginInfoOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="PluginInfo" type="tns:PluginInfo" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DeployProcessInputMsgType">
        <xs:sequence>
            <xs:element name="DeploymentParameters" type="tns:PluginParameters" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="processName" type="xs:string"/>
        <xs:attribute name="versionName" type="xs:string"/>
        <xs:attribute name="branchName" type="xs:string"/>
        <xs:attribute name="nativeType" type="xs:string"/>
        <xs:attribute name="deploymentPluginName" type="xs:string" use="optional"/>
        <xs:attribute name="deploymentPluginVersion" type="xs:string" use="optional"/>
    </xs:complexType>
    <xs:complexType name="DeployProcessOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Message" type="tns:PluginMessages" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <!-- Common Data Types -->
    <xs:complexType name="AnnotationsType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="AnnotationName" type="xs:string"/>
        </xs:sequence>
        <xs:attribute name="NativeType" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="CanonicalsType">
        <xs:sequence>
            <xs:element name="Canonical" type="tns:CanonicalType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CanonicalType">
        <xs:sequence>
            <xs:element name="ProcessId" type="xs:int"/>
            <xs:element name="VersionName" type="xs:string"/>
            <xs:element name="Cpf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EditSessionType">
        <xs:attribute name="username" type="xs:string"/>
        <xs:attribute name="nativeType" type="xs:string"/>
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="processName" type="xs:string"/>
        <xs:attribute name="currentVersionNumber" type="xs:string"/>
        <xs:attribute name="maxVersionNumber" type="xs:string"/>
        <xs:attribute name="originalVersionNumber" type="xs:string"/>
        <xs:attribute name="originalBranchName" type="xs:string"/>
        <xs:attribute name="newBranchName" type="xs:string"/>
        <xs:attribute name="createNewBranch" type="xs:boolean"/>
        <xs:attribute name="domain" type="xs:string"/>
        <xs:attribute name="creationDate" type="xs:string"/>
        <xs:attribute name="lastUpdate" type="xs:string"/>
        <xs:attribute name="withAnnotation" type="xs:boolean"/>
        <xs:attribute name="annotation" type="xs:string"/>
        <xs:attribute name="publicModel" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="NativeTypesType">
        <xs:sequence>
            <xs:element name="NativeType" minOccurs="0" maxOccurs="unbounded" type="tns:FormatType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FormatType">
        <xs:attribute name="format" type="xs:string"/>
        <xs:attribute name="extension" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="DomainsType">
        <xs:sequence>
            <xs:element name="Domain" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GroupType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="UserType">
        <xs:sequence>
            <xs:element name="Roles" type="tns:RoleType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Permissions" type="tns:PermissionType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="SearchHistories" type="tns:SearchHistoriesType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Membership" type="tns:MembershipType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="firstName" type="xs:string"/>
        <xs:attribute name="lastName" type="xs:string"/>
        <xs:attribute name="lastActivityDate" type="xs:string"/>
        <xs:attribute name="username" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="WorkspaceType">
        <xs:sequence>
            <xs:element name="Folders" type="tns:FolderType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Processes" type="tns:ProcessSummaryType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:int"/>
        <xs:attribute name="workspaceName" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="FolderType">
        <xs:sequence>
            <xs:element name="Folders" type="tns:FolderType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="Processes" type="tns:ProcessSummaryType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:int"/>
        <xs:attribute name="parentId" type="xs:int"/>
        <xs:attribute name="folderName" type="xs:string"/>
        <xs:attribute name="hasRead" type="xs:boolean"/>
        <xs:attribute name="hasWrite" type="xs:boolean"/>
        <xs:attribute name="hasOwnership" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="RoleType">
        <xs:sequence>
            <xs:element name="RolePermissions" type="tns:PermissionType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="PermissionType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="MembershipType">
        <xs:attribute name="id" type="xs:string"/>
        <xs:attribute name="email" type="xs:string"/>
        <xs:attribute name="locked" type="xs:boolean"/>
        <xs:attribute name="approved" type="xs:boolean"/>
        <xs:attribute name="password" type="xs:string" use="optional"/>
        <xs:attribute name="passwordSalt" type="xs:string"/>
        <xs:attribute name="passwordQuestion" type="xs:string"/>
        <xs:attribute name="passwordAnswer" type="xs:string"/>
        <xs:attribute name="failedLogins" type="xs:int"/>
        <xs:attribute name="failedAnswers" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GroupAccessType">
        <xs:attribute name="groupId" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="hasRead" type="xs:boolean"/>
        <xs:attribute name="hasWrite" type="xs:boolean"/>
        <xs:attribute name="hasOwnership" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="UsernamesType">
        <xs:sequence>
            <xs:element name="Username" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SearchHistoriesType">
        <xs:attribute name="search" type="xs:string"/>
        <xs:attribute name="num" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="ResultType">
        <xs:attribute name="message" type="xs:string"/>
        <xs:attribute name="code" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="SummariesType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Summary" type="tns:SummaryType"/>
        </xs:sequence>
        <xs:attribute name="total_count" type="xs:long"/>
        <xs:attribute name="count" type="xs:long"/>
        <xs:attribute name="offset" type="xs:long"/>
    </xs:complexType>

    <xs:complexType name="SummaryType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="1" name="Folder" type="tns:FolderType"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="id" type="xs:int"/>
        <xs:attribute name="domain" type="xs:string"/>
        <xs:attribute name="ranking" type="xs:string"/>
        <xs:attribute name="makePublic" type="xs:boolean"/>
        <xs:attribute name="owner" type="xs:string"/>
        <xs:attribute name="hasRead" type="xs:boolean"/>
        <xs:attribute name="hasWrite" type="xs:boolean"/>
        <xs:attribute name="hasOwnership" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="LogSummaryType">
        <xs:complexContent>
            <xs:extension base="tns:SummaryType" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ProcessSummaryType">
        <xs:complexContent>
            <xs:extension base="tns:SummaryType">
                <xs:sequence>
                    <xs:element minOccurs="1" maxOccurs="unbounded" name="VersionSummaries" type="tns:VersionSummaryType"/>
                </xs:sequence>
                <xs:attribute name="original_native_type" type="xs:string"/>
                <xs:attribute name="last_version" type="xs:string"/>
                <xs:attribute name="pqlIndexerStatus" type="tns:IndexStatus"/>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <!-- These enumeration names correspond to org.pql.index.IndexStatus. -->
    <xs:simpleType name="IndexStatus">
        <xs:restriction base="xs:string">
            <xs:enumeration value="UNINDEXED"/>
            <xs:enumeration value="INDEXING"/>
            <xs:enumeration value="INDEXED"/>
            <xs:enumeration value="CANNOTINDEX"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="VersionSummaryType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="Annotations" type="tns:AnnotationsType"/>
        </xs:sequence>
        <xs:attribute name="ranking" type="xs:string"/>
        <xs:attribute name="name" type="xs:string"/>
        <xs:attribute name="last_update" type="xs:string"/>
        <xs:attribute name="creation_date" type="xs:string"/>
        <xs:attribute name="score" type="xs:double"/>
        <xs:attribute name="versionNumber" type="xs:string"/>
        <xs:attribute name="empty" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="ParametersType">
        <xs:sequence>
            <xs:element name="Parameter" type="tns:ParameterType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ParameterType">
        <xs:sequence>
            <xs:element name="Name" type="xs:string"/>
            <xs:element name="Value" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ProcessVersion_idsType">
        <xs:sequence>
            <xs:element minOccurs="1" maxOccurs="unbounded" name="ProcessVersion_id" type="tns:ProcessVersion_idType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ProcessVersion_idType">
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="branchName" type="xs:string"/>
        <xs:attribute name="VersionNumber" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ProcessVersionType">
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="VersionName" type="xs:string"/>
        <xs:attribute name="Score" type="xs:double"/>
    </xs:complexType>

    <!-- Manager Data Types -->
    <xs:complexType name="SaveFolderPermissionsInputMsgType">
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="hasRead" type="xs:boolean"/>
        <xs:attribute name="hasWrite" type="xs:boolean"/>
        <xs:attribute name="hasOwnership" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="SaveFolderPermissionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Message" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="SaveProcessPermissionsInputMsgType">
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="hasRead" type="xs:boolean"/>
        <xs:attribute name="hasWrite" type="xs:boolean"/>
        <xs:attribute name="hasOwnership" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="SaveProcessPermissionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Message" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="SaveLogPermissionsInputMsgType">
        <xs:attribute name="logId" type="xs:int"/>
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="hasRead" type="xs:boolean"/>
        <xs:attribute name="hasWrite" type="xs:boolean"/>
        <xs:attribute name="hasOwnership" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="SaveLogPermissionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Message" type="xs:string"/>
    </xs:complexType>

    <!-- Manager Data Types -->
    <xs:complexType name="RemoveFolderPermissionsInputMsgType">
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="userId" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="RemoveFolderPermissionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Message" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="RemoveProcessPermissionsInputMsgType">
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="userId" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="RemoveProcessPermissionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Message" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="RemoveLogPermissionsInputMsgType">
        <xs:attribute name="logId" type="xs:int"/>
        <xs:attribute name="userId" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="RemoveLogPermissionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Message" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="SearchGroupsInputMsgType">
        <xs:attribute name="searchString" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="SearchGroupsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Groups" type="tns:GroupType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SearchUserInputMsgType">
        <xs:attribute name="searchString" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="SearchUserOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Users" type="tns:UserType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IsGEDReadyInputMsgType">
        <xs:attribute name="folderId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="IsGEDReadyOutputMsgType">
        <xs:attribute name="GEDReady" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="ReadDomainsInputMsgType">
        <xs:attribute name="Empty" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="ReadDomainsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Domains" type="tns:DomainsType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFolderGroupsInputMsgType">
        <xs:attribute name="folderId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetFolderGroupsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Groups" type="tns:GroupAccessType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetProcessGroupsInputMsgType">
        <xs:attribute name="processId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetProcessGroupsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Groups" type="tns:GroupAccessType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetLogGroupsInputMsgType">
        <xs:attribute name="logId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetLogGroupsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Groups" type="tns:GroupAccessType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadAllUsersInputMsgType">
        <xs:attribute name="Empty" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="ReadAllUsersOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Usernames" type="tns:UsernamesType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadUserByUsernameInputMsgType">
        <xs:attribute name="username" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ReadUserByUsernameOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="User" type="tns:UserType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadUserByEmailInputMsgType">
        <xs:attribute name="email" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ReadUserByEmailOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="user" type="tns:UserType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ResetUserPasswordInputMsgType">
        <xs:attribute name="username" type="xs:string"/>
        <xs:attribute name="password" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ResetUserPasswordOutputMsgType">
        <xs:sequence>
            <xs:element name="result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="success" type="xs:boolean" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadNativeTypesInputMsgType">
        <xs:attribute name="empty" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="ReadNativeTypesOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="NativeTypes" type="tns:NativeTypesType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EditLogDataInputMsgType">
        <xs:attribute name="logName" type="xs:string"/>
        <xs:attribute name="id" type="xs:int"/>
        <xs:attribute name="makePublic" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="EditLogDataOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="EditProcessDataInputMsgType">
        <xs:attribute name="processName" type="xs:string"/>
        <xs:attribute name="id" type="xs:int"/>
        <xs:attribute name="domain" type="xs:string"/>
        <xs:attribute name="owner" type="xs:string"/>
        <xs:attribute name="ranking" type="xs:string"/>
        <xs:attribute name="newVersion" type="xs:string"/>
        <xs:attribute name="preVersion" type="xs:string"/>
        <xs:attribute name="makePublic" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="EditProcessDataOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetWorkspaceFolderTreeInputMsgType">
        <xs:attribute name="userId" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="GetWorkspaceFolderTreeOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Folders" type="tns:FolderType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetSubFoldersInputMsgType">
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="folderId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetSubFoldersOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Folders" type="tns:FolderType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetBreadcrumbsInputMsgType">
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="folderId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetBreadcrumbsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Folders" type="tns:FolderType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetProcessesInputMsgType">
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="pageIndex" type="xs:int"/>
        <xs:attribute name="pageSize" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetProcessesOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Processes" type="tns:SummariesType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>

    </xs:complexType>

    <xs:complexType name="GetLogsInputMsgType">
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="pageIndex" type="xs:int"/>
        <xs:attribute name="pageSize" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GetLogsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Logs" type="tns:SummariesType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CreateFolderInputMsgType">
        <xs:attribute name="userId" type="xs:string"/>
        <xs:attribute name="folderName" type="xs:string"/>
        <xs:attribute name="parentFolderId" type="xs:int"/>
        <xs:attribute name="GEDMatrixReady" type="xs:boolean" use="optional"/>
    </xs:complexType>

    <xs:complexType name="CreateFolderOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="AddProcessToFolderInputMsgType">
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="folderId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="AddProcessToFolderOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="UpdateFolderInputMsgType">
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="folderName" type="xs:string"/>
        <xs:attribute name="GEDMatrixReady" type="xs:boolean" use="optional"/>
        <xs:attribute name="username" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="UpdateFolderOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DeleteFolderInputMsgType">
        <xs:attribute name="folderId" type="xs:int"/>
        <xs:attribute name="username" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="DeleteFolderOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="WriteUserInputMsgType">
        <xs:sequence>
            <xs:element name="User" type="tns:UserType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="WriteUserOutputMsgType">
        <xs:sequence>
            <xs:element name="User" type="tns:UserType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="UpdateSearchHistoryInputMsgType">
        <xs:sequence>
            <xs:element name="User" type="tns:UserType"/>
            <xs:element name="SearchHistory" type="tns:SearchHistoriesType" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="UpdateSearchHistoryOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CreateUserInputMsgType">
        <xs:sequence>
            <xs:element name="User" type="tns:UserType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CreateUserOutputMsgType">
        <xs:sequence>
            <xs:element name="User" type="tns:UserType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DeleteProcessVersionsInputMsgType">
        <xs:sequence>
            <xs:element name="ProcessVersionIdentifier" type="tns:ProcessVersionIdentifierType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="username" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="DeleteProcessVersionsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DeleteLogInputMsgType">
        <xs:sequence>
            <xs:element name="LogSummaryType" type="tns:LogSummaryType" minOccurs="1" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="username" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="DeleteLogOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ImportLogInputMsgType">
        <xs:sequence>
            <xs:element name="Log" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Extension" type="xs:string"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ImportProcessInputMsgType">
        <xs:sequence>
            <xs:element name="ProcessDescription" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="CanoniserParameters" type="tns:PluginParameters" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="AddFakeEvents" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="UpdateProcessInputMsgType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="EditSessionCode" type="xs:int"/>
        <xs:attribute name="PreVersion" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ImportLogOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ImportLogResult" type="tns:ImportLogResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ImportProcessOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ImportProcessResult" type="tns:ImportProcessResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ImportProcessResultType">
        <xs:sequence>
            <xs:element name="ProcessSummary" type="tns:ProcessSummaryType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Message" type="tns:PluginMessages" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ImportLogResultType">
        <xs:sequence>
            <xs:element name="LogSummary" type="tns:LogSummaryType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Message" type="tns:PluginMessages" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExportFormatInputMsgType">
        <xs:sequence>
            <xs:element name="CanoniserParameters" type="tns:PluginParameters" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Format" type="xs:string"/>
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="ProcessName" type="xs:string"/>
        <xs:attribute name="BranchName" type="xs:string"/>
        <xs:attribute name="versionNumber" type="xs:string"/>
        <xs:attribute name="AnnotationName" type="xs:string"/>
        <xs:attribute name="withAnnotations" type="xs:boolean"/>
        <xs:attribute name="Owner" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ExportFormatOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ExportResult" type="tns:ExportFormatResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExportLogInputMsgType">
        <xs:attribute name="LogId" type="xs:int"/>
        <xs:attribute name="LogName" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ExportLogOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ExportResult" type="tns:ExportLogResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExportFormatResultType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Message" type="tns:PluginMessages" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ExportLogResultType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Message" type="tns:PluginMessages" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="UpdateProcessOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ProcessVersionIdentifierType">
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="ProcessName" type="xs:string"/>
        <xs:attribute name="BranchName" type="xs:string"/>
        <xs:attribute name="VersionNumber" type="xs:string"/>
    </xs:complexType>

    <!-- DataAccess Data Types -->
    <xs:complexType name="ReadProcessSummariesInputMsgType">
        <xs:attribute name="FolderId" type="xs:int"/>
        <xs:attribute name="SearchExpression" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ReadProcessSummariesOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="ProcessSummaries" type="tns:SummariesType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="WriteAnnotationInputMsgType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Anf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
        <xs:attribute name="EditSessionCode" type="xs:int"/>
        <xs:attribute name="AnnotationName" type="xs:string"/>
        <xs:attribute name="IsNew" type="xs:boolean"/>
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="Version" type="xs:string"/>
        <xs:attribute name="CpfURI" type="xs:string"/>
        <xs:attribute name="NativeType" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="WriteAnnotationOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <!-- ToolBox Data Types -->
    <xs:complexType name="MergeProcessesInputMsgType">
        <xs:sequence>
            <xs:element name="ProcessVersion_ids" type="tns:ProcessVersion_idsType"/>
            <xs:element name="Parameters" type="tns:ParametersType"/>
        </xs:sequence>
        <xs:attribute name="ProcessName" type="xs:string"/>
        <xs:attribute name="VersionName" type="xs:string"/>
        <xs:attribute name="Domain" type="xs:string"/>
        <xs:attribute name="Username" type="xs:string"/>
        <xs:attribute name="Cpf_uri" type="xs:string"/>
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="FolderId" type="xs:int"/>
        <xs:attribute name="Algorithm" type="xs:string"/>
        <xs:attribute name="MakePublic" type="xs:boolean" />
    </xs:complexType>

    <xs:complexType name="MergeProcessesOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ProcessSummary" type="tns:ProcessSummaryType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SearchForSimilarProcessesInputMsgType">
        <xs:sequence>
            <xs:element name="ProcessId" type="xs:int"/>
            <xs:element name="VersionName" type="xs:string"/>
            <xs:element name="Algorithm" type="xs:string"/>
            <xs:element name="LatestVersions" type="xs:boolean"/>
            <xs:element name="FolderId" type="xs:int"/>
            <xs:element name="userId" type="xs:string"/>
            <xs:element name="Parameters" type="tns:ParametersType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SearchForSimilarProcessesOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ProcessSummaries" type="tns:SummariesType"/>
        </xs:sequence>
    </xs:complexType>


    <!-- ************************* Stuff not really required but used at the moment ************************* -->


    <!-- Canoniser Stuff -->
    <xs:complexType name="GenerateAnnotationInputMsgType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
        <xs:attribute name="EditSessionCode" type="xs:int"/>
        <xs:attribute name="AnnotationName" type="xs:string"/>
        <xs:attribute name="IsNew" type="xs:boolean"/>
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="Version" type="xs:string"/>
        <xs:attribute name="NativeType" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="GenerateAnnotationOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CanoniseProcessInputMsgType">
        <xs:sequence>
            <xs:element name="ProcessDescription" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="Cpf_uri" type="xs:string"/>
        <xs:attribute name="AddFakeEvents" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="CanoniseProcessOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ProcessSummary" type="tns:ProcessSummaryType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DeCanoniseProcessInputMsgType">
        <xs:sequence>
            <xs:element name="processId" type="xs:int"/>
            <xs:element name="version" type="xs:string"/>
            <xs:element name="NativeType" type="xs:string"/>
            <xs:element name="Cpf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Anf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DeCanoniseProcessOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="NativeDescription" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CanoniseVersionInputMsgType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="EditSessionCode" type="xs:int"/>
        <xs:attribute name="Cpf_uri" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="CanoniseVersionOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>


    <!-- DataAccess Not needed stuff -->
    <xs:complexType name="ReadProcessSummaryInputMsgType">
        <xs:sequence>
            <xs:element name="ProcessVersions" type="tns:ProcessVersionsType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ProcessVersionsType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="ProcessVersion" type="tns:ProcessVersionType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadCanonicalsInputMsgType">
        <xs:sequence>
            <xs:element minOccurs="0" maxOccurs="unbounded" name="ProcessVersion" type="tns:ProcessVersionType"/>
        </xs:sequence>
        <xs:attribute name="LatestVersions" type="xs:boolean"/>
    </xs:complexType>

    <xs:complexType name="ReadCanonicalsOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="Canonicals" type="tns:CanonicalsType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StoreCpfInputMsgType">
        <xs:sequence>
            <xs:element name="processName" type="xs:string"/>
            <xs:element name="version" type="xs:string"/>
            <xs:element name="domain" type="xs:string"/>
            <xs:element name="username" type="xs:string"/>
            <xs:element name="sources" type="tns:MergedSources"/>
            <xs:element name="Cpf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StoreCpfOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ProcessSummary" type="tns:ProcessSummaryType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MergedSources">
        <xs:sequence>
            <xs:element name="mergedSource" type="tns:MergedSource" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="MergedSource">
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="versionName" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ReadCanonicalAnfInputMsgType">
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="version" type="xs:string"/>
        <xs:attribute name="withAnnotation" type="xs:boolean"/>
        <xs:attribute name="annotationName" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ReadCanonicalAnfOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="cpf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream" minOccurs="1"
                        maxOccurs="1"/>
            <xs:element name="anf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream" minOccurs="0"
                        maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ReadFormatInputMsgType">
        <xs:attribute name="processId" type="xs:int"/>
        <xs:attribute name="version" type="xs:string"/>
        <xs:attribute name="format" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ReadFormatOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType" minOccurs="1" maxOccurs="1"/>
            <xs:element name="Native" type="xs:base64Binary"
                        xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetCpfUriInputMsgType">
        <xs:attribute name="ProcessId" type="xs:int"/>
        <xs:attribute name="Version" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="GetCpfUriOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
        <xs:attribute name="CpfURI" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="StoreNativeCpfInputMsgType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Cpf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Anf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="CpfURI" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="StoreNativeCpfOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="ProcessSummary" type="tns:ProcessSummaryType" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StoreNativeInputMsgType">
        <xs:sequence>
            <xs:element name="processId" type="xs:int"/>
            <xs:element name="version" type="xs:string"/>
            <xs:element name="NativeType" type="xs:string"/>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StoreNativeOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="StoreVersionInputMsgType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Cpf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Anf" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="EditSession" type="tns:EditSessionType" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
        <xs:attribute name="EditSessionCode" type="xs:int"/>
        <xs:attribute name="CpfURI" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="StoreVersionOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClustersRequestType">
        <xs:sequence>
            <xs:element name="ClusterFilter" type="tns:ClusterFilterType"/>
        </xs:sequence>
    </xs:complexType>


    <xs:simpleType name="StringList">
        <xs:list itemType="xs:string"/>
    </xs:simpleType>

    <xs:complexType name="GetClustersResponseType">
        <xs:sequence>
            <xs:element name="Clusters" type="tns:ClusterType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="ClusterType">
        <xs:sequence>
            <xs:element name="ClusterLabel" type="xs:string"/>
            <xs:element name="ClusterSize" type="xs:int"/>
            <xs:element name="MedoidId" type="xs:int"/>
            <xs:element name="AvgFragmentSize" type="xs:float"/>
            <xs:element name="BCR" type="xs:double"/>
            <xs:element name="RefactoringGain" type="xs:int"/>
            <xs:element name="StandardizationEffort" type="xs:double"/>
            <xs:element name="Fragments" type="tns:FragmentData" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="ClusterId" type="xs:string"/>
    </xs:complexType>


    <xs:complexType name="FragmentDistancesType">
        <xs:sequence>
            <xs:element name="Distance" type="tns:DistanceType" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="DistanceType">
        <xs:sequence>
            <xs:element name="GED" type="xs:double"/>
        </xs:sequence>
        <xs:attribute name="FragmentId" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="FragmentData">
        <xs:sequence>
            <xs:element name="FragmentId" type="xs:int"/>
            <xs:element name="FragmentLabel" type="xs:string"/>
            <xs:element name="Distance" type="xs:double"/>
            <xs:element name="FragmentSize" type="xs:int"/>
            <xs:element name="ProcessAssociations" type="tns:ProcessAssociationsType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ClusterFilterType">
        <xs:sequence>
            <xs:element name="minClusterSize" type="xs:int"/>
            <xs:element name="maxClusterSize" type="xs:int"/>
            <xs:element name="minAvgFragmentSize" type="xs:float"/>
            <xs:element name="maxAvgFragmentSize" type="xs:float"/>
            <xs:element name="minBCR" type="xs:double"/>
            <xs:element name="maxBCR" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFragmentInputMsgType">
        <xs:sequence>
            <xs:element name="FragmentId" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetFragmentOutputMsgType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="FragmentResult" type="tns:ExportFragmentResultType"/>
        </xs:sequence>
        <xs:attribute name="NativeType" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="ExportFragmentResultType">
        <xs:sequence>
            <xs:element name="Native" type="xs:base64Binary" xmime:expectedContentTypes="application/octet-stream"/>
            <xs:element name="Message" type="tns:PluginMessages" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FragmentType">
        <xs:sequence>
            <xs:element name="FragmentId" type="xs:int"/>
            <xs:element name="Content" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="CreateGEDMatrixInputMsgType">
        <xs:attribute name="empty" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="CreateGEDMatrixOutputMsgType">
        <xs:attribute name="completed" type="xs:boolean" use="optional"/>
    </xs:complexType>


    <xs:complexType name="CreateClustersInputMsgType">
        <xs:sequence>
            <xs:element name="ClusterSettings" type="tns:ClusterSettingsType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ClusterSettingsType">
        <xs:sequence>
            <xs:element name="Algorithm" type="xs:string"/>
            <xs:element name="ClusteringParams" type="tns:ClusteringParameterType" maxOccurs="unbounded"  minOccurs="1">
            </xs:element>
            <xs:element name="ConstrainedProcessIds" type="tns:ConstrainedProcessIdsType"/>
        </xs:sequence>
    </xs:complexType>


    <xs:complexType name="CreateClustersOutputMsgType">
        <xs:sequence>
            <xs:element name="ClusterSummaries" type="tns:ClusteringSummaryType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ClusteringSummaryType">
        <xs:sequence>
            <xs:element name="numClusters" type="xs:int"/>
            <xs:element name="minClusterSize" type="xs:int"/>
            <xs:element name="maxClusterSize" type="xs:int"/>
            <xs:element name="minAvgFragmentSize" type="xs:float"/>
            <xs:element name="maxAvgFragmentSize" type="xs:float"/>
            <xs:element name="minBCR" type="xs:double"/>
            <xs:element name="maxBCR" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ClusteringParameterType">
        <xs:sequence>
            <xs:element name="ParamName" type="xs:string"/>
            <xs:element name="ParmaValue" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClusteringSummaryInputMsgType">
        <xs:sequence>
            <xs:element name="param1" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClusteringSummaryOutputMsgType">
        <xs:sequence>
            <xs:element name="ClusteringSummary" type="tns:ClusteringSummaryType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetPairwiseDistancesInputMsgType">
        <xs:sequence>
            <xs:element name="FragmentIds" type="tns:FragmentIdsType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FragmentIdsType">
        <xs:sequence>
            <xs:element name="FragmentId" type="xs:int" maxOccurs="unbounded" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetPairwiseDistancesOutputMsgType">
        <xs:sequence>
            <xs:element name="PairDistances" type="tns:PairDistancesType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PairDistancesType">
        <xs:sequence>
            <xs:element name="PairDistance" type="tns:PairDistanceType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="PairDistanceType">
        <xs:sequence>
            <xs:element name="FragmentId1" type="xs:int"/>
            <xs:element name="FragmentId2" type="xs:int"/>
            <xs:element name="Distance" type="xs:double"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ProcessAssociationsType">
        <xs:sequence>
            <xs:element name="ProcessId" type="xs:int"/>
            <xs:element name="ProcessName" type="xs:string"/>
            <xs:element name="BranchName" type="xs:string"/>
            <xs:element name="ProcessVersionId" type="xs:int"/>
            <xs:element name="ProcessVersionNumber" type="xs:string"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ConstrainedProcessIdsType">
        <xs:sequence>
            <xs:element name="ProcessId" type="xs:int" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClusterSummariesInputMsgType">
        <xs:sequence>
            <xs:element name="filter" type="tns:ClusterFilterType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClusterSummariesOutputMsgType">
        <xs:sequence>
            <xs:element name="clusterSummaries" type="tns:ClusterSummaryType" maxOccurs="unbounded" minOccurs="0"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetGedMatrixSummaryInputMsgType">
        <xs:attribute name="empty" type="xs:string" use="optional"/>
    </xs:complexType>

    <xs:complexType name="GetGedMatrixSummaryOutputMsgType">
        <xs:sequence>
            <xs:element name="gedMatrixSummary" type="tns:GedMatrixSummaryType" maxOccurs="1" minOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="ClusterSummaryType">
        <xs:sequence>
            <xs:element name="ClusterLabel" type="xs:string"/>
            <xs:element name="ClusterSize" type="xs:int"/>
            <xs:element name="MedoidId" type="xs:int"/>
            <xs:element name="AvgFragmentSize" type="xs:float"/>
            <xs:element name="BCR" type="xs:double"/>
            <xs:element name="RefactoringGain" type="xs:int"/>
            <xs:element name="StandardizationEffort" type="xs:double"/>
        </xs:sequence>
        <xs:attribute name="ClusterId" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="GedMatrixSummaryType">
        <xs:sequence>
            <xs:element name="Result" type="tns:ResultType"/>
            <xs:element name="built" type="xs:boolean"/>
            <xs:element name="buildDate" type="xs:dateTime"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClusterInputMsgType">
        <xs:sequence>
            <xs:element name="ClusterId" type="xs:int"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="GetClusterOutputMsgType">
        <xs:sequence>
            <xs:element name="Cluster" type="tns:ClusterType"/>
        </xs:sequence>
    </xs:complexType>
</xs:schema>
