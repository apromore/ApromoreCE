{
	"title":"jBPM Stencils",
	"namespace":"http://oryx-editor.org/stencilsets/extensions/jbpm#",
	"description":"A subset of BPMN 1.2 for execution with jBPM",
	"extends":"http://b3mn.org/stencilset/bpmn1.1#",
	"stencils":[
	{
		"type": "node",
		"id":"java",
		"title":"Java Task",
		"groups":["Activities"],
		"groups_de":["Aktivitäten"],
		"description":"A process execution will execute the method of the class that is configured in this activity.",
		"description_de":"Die Ausführungsengine führt die Methode der Klasse aus, die in dieser Aktivität definiert wird.",
		"view":"../../extensions/jbpm/view/node.empty.svg",
		"icon":"../../extensions/jbpm/icon/java.png",
		"roles": [
			"sequence_start",
			"sequence_end",
			"messageflow_start",
			"messageflow_end",
			"to_task_event",
			"from_task_event",
			"tc",
			"fromtoall",
			"FromEventbasedGateway",
			"ActivitiesMorph"
		],
		"properties": [
			{
				"id":"name",
				"type":"String",
				"title":"Name",
				"value":"",
				"description":"",
				"readonly":false,
				"optional":true,
				"refToView":"acttext",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"class",
				"type":"String",
				"title":"Class",
				"value":"",
				"description":"The fully qualified classname",
				"readonly":false,
				"optional":false,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"method",
				"type":"String",
				"title":"Method",
				"value":"",
				"description":"The name of the method to invoke",
				"readonly":false,
				"optional":false,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"var",
				"type":"String",
				"title":"Variable",
				"value":"",
				"description":"The name of the variable in which the return value should be stored.",
				"readonly":false,
				"optional":true,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"field",
				"type":"Complex",
				"title":"Field",
				"value":"",
				"description":"describes a configuration value to inject in a memberfield before the method is invoked.",
				"readonly": 	false,
				"optional": 	true,
				"complexItems": [
				{
					"id":"f_name",
					"name":"Field Name",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false 
				},
				{
					"id":"type",
					"name":"Type",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false 
				},
				{
					"id":"name",
					"name":"String Name",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false 
				},
				{
					"id":"value",
					"name":"String Value",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false
				}
				]
			},
			{
				"id":"arg",
				"type":"Complex",
				"title":"Aguments",
				"value":"",
				"description":"method parameters",
				"readonly": 	false,
				"optional": 	true,
				"complexItems": [
				{
					"id":"name",
					"name":"Name",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false 
				},
				{
					"id":"value",
					"name":"Value",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false 
				},
				{
					"id":"type",
					"name":"Type",
					"type":"String",
					"value":"",
					"width":100,
					"optional":false
				}
				]
			},
			{
				"id":"bgColor",
				"type":"Color",
				"title":"BackgroundColor",
				"title_de":"Hintergrundfarbe",
				"value":"#ffffcc",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"taskrect",
				"fill":true,
				"stroke":false
			},
		],
	},
	{
		"type": "node",
		"id":"script",
		"title":"Script",
		"groups":["Activities"],
		"groups_de":["Aktivitäten"],
		"description":"A script activity evaluates a script. Scripts can be specified in any language for which there is a JSR-223 compliant scripting engine.",
		"description_de":"Eine Skript-Aktivität evaluiert ein Skript. Es kann in jeder Sprache spezifiziert werden, für die eine JSR-223 kompatible Skript Engine existiert",
		"view":"../../extensions/jbpm/view/node.empty.svg",
		"icon":"../../extensions/jbpm/icon/empty.png",
		"roles": [
			"sequence_start",
			"sequence_end",
			"messageflow_start",
			"messageflow_end",
			"to_task_event",
			"from_task_event",
			"tc",
			"fromtoall",
			"FromEventbasedGateway",
			"ActivitiesMorph"
		],
		"properties": [
			{
				"id":"name",
				"type":"String",
				"title":"Name",
				"value":"",
				"description":"",
				"readonly":false,
				"optional":true,
				"refToView":"acttext",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"expr",
				"type":"String",
				"title":"Expression",
				"value":"",
				"description":"the expression text to evaluate",
				"readonly":false,
				"optional":true,
				"refToView":"",
				"length":""
			},
			{
				"id":"text",
				"type":"Text",
				"title":"Text",
				"value":"",
				"description":"the expression text to evaluate",
				"readonly":false,
				"optional":true,
				"refToView":"",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"lang",
				"type":"String",
				"title":"Language",
				"value":"",
				"description":"the language in which the expression is specified",
				"readonly":false,
				"optional":true,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"var",
				"type":"String",
				"title":"Variable",
				"value":"",
				"description":"The name of the variable in which the return value should be stored.",
				"readonly":false,
				"optional":true,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"bgColor",
				"type":"Color",
				"title":"BackgroundColor",
				"title_de":"Hintergrundfarbe",
				"value":"#ffffcc",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"taskrect",
				"fill":true,
				"stroke":false
			},
		],
	},
	{
		"type":"node",
		"id":"hql",
		"title":"HQL",
		"groups":["Activities"],
		"groups_de":["Aktivitäten"],
		"description":"With the hql activity, a HQL query can be performed on the database and the result is stored in a process variable",
		"description_de":"Über eine HQL-Aktivität kann eine HQL-Anfrage an die Datenbank durchgeführt und das Ergebnis in einer Prozessvariablen gespeichert werden",
		"view":"../../extensions/jbpm/view/node.empty.svg",
		"icon":"../../extensions/jbpm/icon/hql.png",
		"roles": [
			"sequence_start",
			"sequence_end",
			"messageflow_start",
			"messageflow_end",
			"to_task_event",
			"from_task_event",
			"tc",
			"fromtoall",
			"FromEventbasedGateway",
			"ActivitiesMorph"
		],
		"properties": [
			{
				"id":"name",
				"type":"String",
				"title":"Name",
				"value":"",
				"description":"",
				"readonly":false,
				"optional":true,
				"refToView":"acttext",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"var",
				"type":"String",
				"title":"Variable",
				"value":"",
				"description":"The name of the variable in which the result is stored",
				"readonly":false,
				"optional":false,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"unique",
				"type":"Boolean",
				"title":"unique",
				"value":false,
				"description":"A value of true means that the result from the hibernate query should be obtained with method uniqueResult(). The default is false and in that case the list()  method will be used to get the result.",
				"readonly":false,
				"optional":true,
				"refToView":"",
			},
			{
				"id":"query",
				"type":"Text",
				"title":"Query",
				"value":"",
				"description":"The HQL query",
				"readonly":false,
				"optional":false,
				"refToView":"",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"parameters",
				"type":"Complex",
				"title":"Parameters",
				"value":"",
				"description":"	The query parameters",
				"readonly": 	false,
				"optional": 	true,
				"complexItems": [
					{
						"id":"name",
						"name":"Name",
						"type":"String",
						"value":"",
						"width":100,
						"optional":false 
					},
					{
						"id":"value",
						"name":"Value",
						"type":"String",
						"value":"",
						"width":100,
						"optional":false,
					},
					{
						"id":"type",
						"name":"Type",
						"type":"String",
						"value":"",
						"width":100,
						"optional":false,
					},
				],
			},
			{
				"id":"bgColor",
				"type":"Color",
				"title":"BackgroundColor",
				"title_de":"Hintergrundfarbe",
				"value":"#ffffcc",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"taskrect",
				"fill":true,
				"stroke":false
			},
		],
	},
	{
		"type":"node",
		"id":"sql",
		"title":"SQL",
		"groups":["Activities"],
		"groups_de":["Aktivitäten"],
		"description":"With the sql activity, a SQL query can be performed on the database and the result is stored in a process variable",
		"description_de":"Über eine SQL-Aktivität kann eine SQL-Anfrage an die Datenbank durchgeführt und das Ergebnis in einer Prozessvariablen gespeichert werden",
		"view":"../../extensions/jbpm/view/node.empty.svg",
		"icon":"../../extensions/jbpm/icon/sql.png",
		"roles": [
			"sequence_start",
			"sequence_end",
			"messageflow_start",
			"messageflow_end",
			"to_task_event",
			"from_task_event",
			"tc",
			"fromtoall",
			"FromEventbasedGateway",
			"ActivitiesMorph"
		],
		"properties": [
			{
				"id":"name",
				"type":"String",
				"title":"Name",
				"value":"",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"acttext",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"var",
				"type":"String",
				"title":"Variable",
				"value":"",
				"description":"The name of the variable in which the result is stored",
				"readonly":false,
				"optional":false,
				"refToView":"",
				"length":"100"
			},
			{
				"id":"unique",
				"type":"Boolean",
				"title":"unique",
				"value":false,
				"description":"",
				"readonly":false,
				"optional":true,
				"refToView":"",
			},
			{
				"id":"query",
				"type":"Text",
				"title":"Query",
				"value":"",
				"description":"The SQL query",
				"readonly":false,
				"optional":false,
				"refToView":"",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"parameters",
				"type":"Complex",
				"title":"Parameters",
				"value":"",
				"description":"	The query parameters",
				"readonly": 	false,
				"optional": 	true,
				"complexItems": [
					{
						"id":"name",
						"name":"Name",
						"type":"String",
						"value":"",
						"width":100,
						"optional":false 
					},
					{
						"id":"value",
						"name":"Value",
						"type":"String",
						"value":"",
						"width":100,
						"optional":false,
					},
					{
						"id":"type",
						"name":"Type",
						"type":"String",
						"value":"",
						"width":100,
						"optional":false,
					},
				],
			},
			{
				"id":"bgColor",
				"type":"Color",
				"title":"BackgroundColor",
				"title_de":"Hintergrundfarbe",
				"value":"#ffffcc",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"taskrect",
				"fill":true,
				"stroke":false
			},
		],
	},
	{
		"type":"node",
		"id":"wait",
		"title":"Wait",
		"groups":["Activities"],
		"groups_de":["Aktivitäten"],
		"description":"Process execution will wait until an external trigger is provided through the API.",
		"description_de":"Die Prozessausführung wird angehalten, bis eine Vortsetzung über die API getriggert wird.",
		"view":"../../extensions/jbpm/view/node.empty.svg",
		"icon":"../../extensions/jbpm/icon/wait.png",
		"roles": [
			"sequence_start",
			"sequence_end",
			"messageflow_start",
			"messageflow_end",
			"to_task_event",
			"from_task_event",
			"tc",
			"fromtoall",
			"FromEventbasedGateway",
			"ActivitiesMorph"
		],
		"properties": [
			{
				"id":"name",
				"type":"String",
				"title":"Name",
				"value":"",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"acttext",
				"length":"",
				"wrapLines":true
			},
			{
				"id":"bgColor",
				"type":"Color",
				"title":"BackgroundColor",
				"title_de":"Hintergrundfarbe",
				"value":"#ffffcc",
				"description":"",
				"readonly":false,
				"optional":false,
				"refToView":"taskrect",
				"fill":true,
				"stroke":false
			},
		],
	},
	],
	"properties":[
		{
			"roles": [
				"Task",
			],
			"properties": [
				{
					"id":"Assignee",
					"type":"String",
					"title":"Assignee",
					"description":"id of the person to which this task must be assigned",
					"readonly":false,
					"optional":true
				},
				{
					"id":"candidate-groups",
					"type":"String",
					"title":"Candidate Groups",
					"description":"resolves to a comma separated list of groupIds. All the people in the groups will be candidates for this task.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"candidate-users",
					"type":"String",
					"title":"Candidate Users",
					"description":"resolves to a comma separated list of userIds. All the users will be candidates for this task.",
					"readonly":false,
					"optional":true
				},
			]
		},
		{
			"roles": [
				"Exclusive_Databased_Gateway",
			],
			"properties": [
				{
					"id":"expr",
					"type":"String",
					"title":"Expression",
					"description":"Script that will be evaluated in the specified expression language.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"lang",
					"type":"String",
					"title":"Language",
					"description":"The language in which expression is to be evaluated.",
					"readonly":false,
					"optional":true
				},
				{
					"id":"handler",
					"type":"String",
					"title":"Exclusive Handler",
					"description":"Fully qualified classname of the handler implementation class.",
					"readonly":false,
					"optional":true
				}
			]
		},
		{
			"roles": [
				"EndEvent",
				"EndCancelEvent",
				"EndErrorEvent",
			],
			"properties": [
				{
					"id":"ends",
					"type":"Choice",
					"title":"Ends",
					"value":"processinstance",
					"description":"Specifies if the whole process instance should be ended or just the path of execution that arrives in the end activity.",
					"readonly":false,
					"optional":true,
					"items": [
						{
							"id":"processinstance",
							"title":"ProcessInstance",
							"value":"processinstance",
							"refToView":""
						},
						{
							"id":"execution",
							"title":"Execution",
							"value":"execution",
							"refToView":""
						},
					]
				},
				{
					"id":"state",
					"type":"String",
					"title":"State",
					"description":"The state assigned to the execution.",
					"readonly":false,
					"optional":true
				},
			]
		},
		{
			"roles": [
				"BPMNDiagram",
			],
			"properties": [
				{
					"id":"key",
					"type":"String",
					"title":"Key",
					"description":"Identification to distinct different process definitions. Multiple versions of a process with the same key can be deployed. The key:name combination must remain exactly the same for all deployed versions.",
					"readonly":false,
					"optional":true
				},
			]
		},
	],
	"rules": {
		"connectionRules": [],
        "cardinalityRules": [],
		"containmentRules": [],
		"morphingRules": []
	},
	"removestencils": [
		"CollapsedSubprocess",
		"Subprocess",
		"Exclusive_Eventbased_Gateway",
		"OR_Gateway",
		"Complex_Gateway",
		"Pool",
		"CollapsedPool",
		"Lane",
		"Group",
		"TextAnnotation",
		"DataObject",
		"StartMessageEvent",
		"StartTimerEvent",
		"StartConditionalEvent",
		"StartSignalEvent",
		"StartMultipleEvent",
		"IntermediateEvent",
		"IntermediateMessageEventCatching",
		"IntermediateMessageEventThrowing",
		"IntermediateTimerEvent",
		"IntermediateErrorEvent",
		"IntermediateCancelEvent",
		"IntermediateCompensationEventCatching",
		"IntermediateCompensationEventThrowing",
		"IntermediateConditionalEvent",
		"IntermediateSignalEventCatching",
		"IntermediateSignalEventThrowing",
		"IntermediateMultipleEventCatching",
		"IntermediateMultipleEventThrowing",
		"IntermediateLinkEventCatching",
		"IntermediateLinkEventThrowing",
		"EndMessageEvent",
		"EndCompensationEvent",
		"EndSignalEvent",
		"EndMultipleEvent",
		"EndTerminateEvent",
		"MessageFlow",
		"Association_Undirected",
		"Association_Unidirectional",
		"Association_Bidirectional"
	],
	"removeproperties": [
	
	{
		"stencil":"BPMNDiagram",
			"properties":[
			"id",
			"author",
			"language",
			"expressionlanguage",
			"querylanguage",
			"creationdate",
			"modificationdate",
			"pools"
		]
	},
	{
		"stencil": "Task",
		"properties": [
			"id",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"status",
			"performers",
			"properties",
			"inputsets",
			"inputs",
			"outputsets",
			"outputs",
			"iorules",
			"startquantity",
			"completionquantity",
			"loopcondition",
			"loopcounter",
			"loopmaximum",
			"testtime",
			"mi_condition",
			"mi_ordering",
			"mi_flowcondition",
			"complexmi_condition",
			"tasktype",
			"inmessage",
			"outmessage",
			"implementation",
			"messageref",
			"instantiate",
			"performers",
			"script",
			"taskref",
			"activitytype"
		]
	},
	{
		"stencil": "Exclusive_Databased_Gateway",
		"properties": [
			"id",
			"xortype",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"markervisible",
			"gates",
			"gates_outgoingsequenceflow",
			"gates_assignments",
			"defaultgate",
			"gate_outgoingsequenceflow",
			"gate_assignments",
			"gatewaytype",
		]
	},
	{
		"stencil": "AND_Gateway",
		"properties": [
			"id",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"gates",
			"gates_outgoingsequenceflow",
			"gates_assignments",
			"gatewaytype",
		]		
	},
	{
		"stencil": "SequenceFlow",
		"properties": [
			"id",
			"categories",
			"documentation",
			"sourceref",
			"targetref",
			"quantity",
		]		
	},
	{
		"stencil": "StartEvent",
		"properties": [
			"id",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"trigger",
			"eventtype",
		]		
	},
	{
		"stencil": "EndEvent",
		"properties": [
			"id",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"eventtype",
			"result",
		]		
	},
	{
		"stencil": "EndErrorEvent",
		"properties": [
			"id",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"eventtype",
			"result",
			"errorcode",
		]		
	},
	{
		"stencil": "EndCancelEvent",
		"properties": [
			"id",
			"categories",
			"documentation",
			"assignments",
			"pool",
			"lanes",
			"eventtype",
			"result"
		]		
	}
	]
}
