<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright Â© 2006-2011, www.processconfiguration.com
    
  All rights reserved. This program and the accompanying materials
  are made available under the terms of the Eclipse Public License v1.0
  which accompanies this distribution, and is available at
  http://www.eclipse.org/legal/epl-v10.html
    
  Contributors:
       Marcello La Rosa - initial API and implementation, subsequent revisions
-->
<schema xmlns="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.processconfiguration.com/CMAP" targetNamespace="http://www.processconfiguration.com/CMAP" elementFormDefault="unqualified" attributeFormDefault="unqualified">
	<element name="CMAP">
		<complexType>
			<choice minOccurs="1" maxOccurs="2">
				<element name="c-epc" type="tns:c-epcType">
					<key name="id">
						<selector xpath="./COR|CXOR|CAND|CFunction"/>
						<field xpath="@id"/>
					</key>
				</element>
				<element name="c-yawl" type="tns:c-yawlType"/>
			</choice>
			<attribute name="qml" type="string" use="optional"/>
		</complexType>
	</element>
	<complexType name="c-yawlType">
		<sequence>
			<element name="splits">
				<complexType>
					<sequence minOccurs="0" maxOccurs="unbounded">
						<element name="port" type="tns:splitPortType">
							<!-- This key to avoid duplicates in the attribute type of the values for each 'split' (e.g. there cannot be more than one 'activated'...) -->
							<key name="splitValues">
								<selector xpath="./value"/>
								<field xpath="@type"/>
							</key>
						</element>
					</sequence>
				</complexType>
				<!-- This key to ensure that each port child of 'splits' refers exactly to one combination of @sourceId and @targetId -->
				<key name="splitPorts">
					<selector xpath="./port"/>
					<field xpath="@sourceId"/>
					<field xpath="@targetId"/>
				</key>
			</element>
			<element name="joins">
				<complexType>
					<sequence minOccurs="0" maxOccurs="unbounded">
						<element name="port" type="tns:joinPortType">
							<!-- This key to avoid duplicates in the attribute type of the values for each 'join' (e.g. there cannot be more than one 'activated'...) -->
							<key name="joinValues">
								<selector xpath="./value"/>
								<field xpath="@type"/>
							</key>
						</element>
					</sequence>
				</complexType>
				<!-- This key to ensure that each port child of 'joins' refers exactly to one combination of @sourceId and @targetId -->
				<key name="joinPorts">
					<selector xpath="./port"/>
					<field xpath="@sourceId"/>
					<field xpath="@targetId"/>
				</key>
			</element>
			<element name="rems">
				<complexType>
					<sequence minOccurs="0" maxOccurs="unbounded">
						<element name="rem" type="tns:remType">
							<!-- This key to avoid duplicates in the attribute type of the values for each 'rem' (e.g. there cannot be more than one 'activated'...) -->
							<key name="remValues">
								<selector xpath="./value"/>
								<field xpath="@type"/>
							</key>
						</element>
					</sequence>
				</complexType>
				<!-- This key to ensure that each rem refers exactly to one @taskId -->
				<key name="remTaskId">
					<selector xpath="./rem"/>
					<field xpath="@taskId"/>
				</key>
			</element>
			<element name="nofis">
				<complexType>
					<sequence minOccurs="0" maxOccurs="unbounded">
						<element name="nofi" type="tns:nofiType"/>
					</sequence>
				</complexType>
				<!-- This key to ensure that each value refers exactly to one @taskId -->
				<key name="nofiTaskId">
					<selector xpath="./nofi"/>
					<field xpath="@taskId"/>
				</key>
			</element>
		</sequence>
		<attribute name="yawl" type="string" use="optional"/>
	</complexType>
	<complexType name="splitPortType">
		<sequence minOccurs="1" maxOccurs="2">
			<!-- One or two value types for a split port -->
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="activated"/>
								<enumeration value="blocked"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="sourceId" type="string"/>
		<attribute name="targetId" type="string"/>
	</complexType>
	<complexType name="joinPortType">
		<sequence minOccurs="2" maxOccurs="3">
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="activated"/>
								<enumeration value="blocked"/>
								<enumeration value="hidden"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="sourceId" type="string"/>
		<attribute name="targetId" type="string"/>
		<!-- Two ot three value types for a join port -->
	</complexType>
	<complexType name="remType">
		<sequence minOccurs="1" maxOccurs="2">
			<!-- One or two value types for a rem -->
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="activated"/>
								<enumeration value="blocked"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="taskId" type="string" use="required"/>
	</complexType>
	<complexType name="nofiType">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="value">
				<complexType>
					<attribute name="minIncrease" type="positiveInteger" use="required"/>
					<attribute name="maxDecrease" type="positiveInteger" use="required"/>
					<attribute name="thresIncrease" type="positiveInteger" use="required"/>
					<attribute name="creationMode" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="restict"/>
								<enumeration value="keep"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="taskId" type="string" use="required"/>
	</complexType>
	<complexType name="c-epcType">
		<choice minOccurs="1" maxOccurs="unbounded">
			<element name="COR" type="tns:CORType">
				<!--key name="valueCOR"> 
					<selector xpath="./value"/> 
					<field xpath="@type"/> 
					</key-->
			</element>
			<element name="CXOR" type="tns:CXORType">
				<!--key name="valueCXOR"> 
					<selector xpath="./value"/> 
					<field xpath="@type"/> 
					</key-->
			</element>
			<element name="CAND" type="tns:CANDType">
				<!--key name="valueCAND"> 
					<selector xpath="./value"/> 
					<field xpath="@type"/> 
					</key-->
			</element>
			<element name="CFunction" type="tns:CFunctionType">
				<key name="valueCFunction">
					<selector xpath="./value"/>
					<field xpath="@type"/>
				</key>
			</element>
		</choice>
		<attribute name="epml" type="string" use="optional"/>
	</complexType>
	<complexType name="CORType">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="or"/>
								<enumeration value="and"/>
								<enumeration value="xor"/>
								<enumeration value="seq"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
					<attribute name="goto" type="positiveInteger"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="id" type="positiveInteger" use="required"/>
	</complexType>
	<complexType name="CXORType">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="and"/>
								<enumeration value="xor"/>
								<enumeration value="seq"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
					<attribute name="goto" type="positiveInteger"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="id" type="positiveInteger" use="required"/>
	</complexType>
	<complexType name="CANDType">
		<sequence minOccurs="1" maxOccurs="unbounded">
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="and"/>
								<enumeration value="seq"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
					<attribute name="goto" type="positiveInteger"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="id" type="positiveInteger" use="required"/>
	</complexType>
	<complexType name="CFunctionType">
		<sequence minOccurs="1" maxOccurs="3">
			<element name="value">
				<complexType>
					<attribute name="type" use="required">
						<simpleType>
							<restriction base="string">
								<enumeration value="on"/>
								<enumeration value="off"/>
								<enumeration value="opt"/>
							</restriction>
						</simpleType>
					</attribute>
					<attribute name="condition" type="string" use="required"/>
				</complexType>
			</element>
		</sequence>
		<attribute name="id" type="positiveInteger" use="required"/>
	</complexType>
</schema>
